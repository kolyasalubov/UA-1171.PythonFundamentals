import random

zen_of_python = r"""Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!
"""
# Task 1.1. Count the total occurencies of words "better", "never" and "is"
count_better = zen_of_python.count('better')
count_never = zen_of_python.count('never')
count_is = zen_of_python.count('is')

print(f'\n***THE FIRST TASK***:\n'
      f'Zen of Python containts {count_better} mentions of word "better", '
      f'{count_never} mentions of word "never" and '
      f'{count_is} mentions of word "is". \n')

# Task 1.2. Display the full text uppercase
print(zen_of_python.upper(),'\n')

# Task 1.3. Replace all "i" with "&"
updated_zen_of_python = zen_of_python.replace('i', '&')
print(updated_zen_of_python,'\n')

# --------------------------------------

four_digit_number = random.randint(1000, 9999)

# Task 2.1. Find a product of all digits
product_of_all_digits_ver_1 = 1
for digit in str(four_digit_number):
      product_of_all_digits_ver_1 *= int(digit)

list_of_digits = list(map(int, str(four_digit_number).strip()))

product_of_all_digits_ver_2 = (list_of_digits[0] * list_of_digits[1] *
                               list_of_digits[2] * list_of_digits[3])

print(f'***THE SECOND TASK:***\n'
      f'The product of all digits in number {four_digit_number} according to '
      f'1st ver is {product_of_all_digits_ver_1} and according to '
      f'2nd ver is {product_of_all_digits_ver_2}.')

# Task 2.2. Write the digits in reverse order
list_of_digits.reverse()
reversed_four_digit_number = int(''.join(map(str, list_of_digits)))

print(f'The reversed digits in {four_digit_number} is {reversed_four_digit_number}.')

# Task 2.3. Write the digits in ascending order
list_of_digits.sort()
sorted_four_digit_number = int(''.join(map(str, list_of_digits)))
print(f'The sorted digits in {four_digit_number} is {sorted_four_digit_number}.')

# --------------------------------------

# Task 2.3. Write the digits in ascending order
first_number = random.randint(0, 99)
second_number = random.randint(100, 499)
print(f'\n\n***THE THIRD TASK:***\n'
      f'We have first number {first_number} and second number {second_number} '
      f'generated by the system.')

first_number, second_number = second_number, first_number

print(f'Now our first number is {first_number} and the second is {second_number}.')

# or we can use math :)
# first_number += second_number
# second_number = first_number - second_number
# first_number -= second_number
